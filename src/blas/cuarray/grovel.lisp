(in-package :cl-tensor.blas.cublas)

(include "cublas_v2.h")


;;; CUDA
(cenum cuda-error
  ((:cuda-success                                 "cudaSuccess"))
  ((:cuda-error-invalid-value                     "cudaErrorInvalidValue"))
  ((:cuda-error-memory-allocation                 "cudaErrorMemoryAllocation"))
  ((:cuda-error-initialization-error              "cudaErrorInitializationError"))
  ((:cuda-error-cudart-unloading                  "cudaErrorCudartUnloading"))
  ((:cuda-error-profiler-disabled                 "cudaErrorProfilerDisabled"))
  ((:cuda-error-invalid-configuration             "cudaErrorInvalidConfiguration"))
  ((:cuda-error-invalid-pitch-value               "cudaErrorInvalidPitchValue"))
  ((:cuda-error-invalid-symbol                    "cudaErrorInvalidSymbol"))
  ((:cuda-error-invalid-texture                   "cudaErrorInvalidTexture"))
  ((:cuda-error-invalid-texture-binding           "cudaErrorInvalidTextureBinding"))
  ((:cuda-error-invalid-channel-descriptor        "cudaErrorInvalidChannelDescriptor"))
  ((:cuda-error-invalid-memcpy-direction          "cudaErrorInvalidMemcpyDirection"))
  ((:cuda-error-invalid-filter-setting            "cudaErrorInvalidFilterSetting"))
  ((:cuda-error-invalid-norm-setting              "cudaErrorInvalidNormSetting"))
  ;((:cuda-error-stub-library                      "cudaErrorStubLibrary"))
  ((:cuda-error-insufficient-driver               "cudaErrorInsufficientDriver"))
  ;((:cuda-error-call-requires-newer-driver        "cudaErrorCallRequiresNewerDriver"))
  ((:cuda-error-invalid-surface                   "cudaErrorInvalidSurface"))
  ((:cuda-error-duplicate-variable-name           "cudaErrorDuplicateVariableName"))
  ((:cuda-error-duplicate-texture-name            "cudaErrorDuplicateTextureName"))
  ((:cuda-error-duplicate-surface-name            "cudaErrorDuplicateSurfaceName"))
  ((:cuda-error-devices-unavailable               "cudaErrorDevicesUnavailable"))
  ((:cuda-error-incompatible-driver-context       "cudaErrorIncompatibleDriverContext"))
  ((:cuda-error-missing-configuration             "cudaErrorMissingConfiguration"))
  ((:cuda-error-launch-max-depth-exceeded         "cudaErrorLaunchMaxDepthExceeded"))
  ((:cuda-error-launch-file-scoped-tex            "cudaErrorLaunchFileScopedTex"))
  ((:cuda-error-launch-file-scoped-surf           "cudaErrorLaunchFileScopedSurf"))
  ((:cuda-error-sync-depth-exceeded               "cudaErrorSyncDepthExceeded"))
  ((:cuda-error-launch-pending-count-exceeded     "cudaErrorLaunchPendingCountExceeded"))
  ((:cuda-error-invalid-device-function           "cudaErrorInvalidDeviceFunction"))
  ((:cuda-error-no-device                         "cudaErrorNoDevice"))
  ((:cuda-error-invalid-device                    "cudaErrorInvalidDevice"))
  ;((:cuda-error-device-not-licensed               "cudaErrorDeviceNotLicensed"))
  ;((:cuda-error-software-validity-not-established "cudaErrorSoftwareValidityNotEstablished"))
  ((:cuda-error-startup-failure                   "cudaErrorStartupFailure"))
  ((:cuda-error-invalid-kernel-image              "cudaErrorInvalidKernelImage"))
  ((:cuda-error-device-uninitialized              "cudaErrorDeviceUninitialized"))
  ((:cuda-error-map-buffer-object-failed          "cudaErrorMapBufferObjectFailed"))
  ((:cuda-error-unmap-buffer-object-failed        "cudaErrorUnmapBufferObjectFailed"))
  ((:cuda-error-array-is-mapped                   "cudaErrorArrayIsMapped"))
  ((:cuda-error-already-mapped                    "cudaErrorAlreadyMapped"))
  ((:cuda-error-no-kernel-image-for-device        "cudaErrorNoKernelImageForDevice"))
  ((:cuda-error-already-acquired                  "cudaErrorAlreadyAcquired"))
  ((:cuda-error-not-mapped                        "cudaErrorNotMapped"))
  ((:cuda-error-not-mapped-as-array               "cudaErrorNotMappedAsArray"))
  ((:cuda-error-not-mapped-as-pointer             "cudaErrorNotMappedAsPointer"))
  ((:cuda-error-ecc-uncorrectable                 "cudaErrorECCUncorrectable"))
  ((:cuda-error-unsupported-limit                 "cudaErrorUnsupportedLimit"))
  ((:cuda-error-device-already-in-use             "cudaErrorDeviceAlreadyInUse"))
  ((:cuda-error-peer-access-unsupported           "cudaErrorPeerAccessUnsupported"))
  ((:cuda-error-invalid-ptx                       "cudaErrorInvalidPtx"))
  ((:cuda-error-invalid-graphics-context          "cudaErrorInvalidGraphicsContext"))
  ((:cuda-error-nvlink-uncorrectable              "cudaErrorNvlinkUncorrectable"))
  ((:cuda-error-jit-compiler-not-found            "cudaErrorJitCompilerNotFound"))
  ;((:cuda-error-unsupported-ptx-version           "cudaErrorUnsupportedPtxVersion"))
  ;((:cuda-error-jit-compilation-disabled          "cudaErrorJitCompilationDisabled"))
  ((:cuda-error-invalid-source                    "cudaErrorInvalidSource"))
  ((:cuda-error-file-not-found                    "cudaErrorFileNotFound"))
  ((:cuda-error-shared-object-symbol-not-found    "cudaErrorSharedObjectSymbolNotFound"))
  ((:cuda-error-shared-object-init-failed         "cudaErrorSharedObjectInitFailed"))
  ((:cuda-error-operating-system                  "cudaErrorOperatingSystem"))
  ((:cuda-error-invalid-resource-handle           "cudaErrorInvalidResourceHandle"))
  ((:cuda-error-illegal-state                     "cudaErrorIllegalState"))
  ((:cuda-error-symbol-not-found                  "cudaErrorSymbolNotFound"))
  ((:cuda-error-not-ready                         "cudaErrorNotReady"))
  ((:cuda-error-illegal-address                   "cudaErrorIllegalAddress"))
  ((:cuda-error-launch-out-of-resources           "cudaErrorLaunchOutOfResources"))
  ((:cuda-error-launch-timeout                    "cudaErrorLaunchTimeout"))
  ;((:cuda-error-launch-incompatible-texturing     "cudaErrorLaunchIncompatibleTexuring"))
  ((:cuda-error-peer-access-already-enabled       "cudaErrorPeerAccessAlreadyEnabled"))
  ;((:cuda-error-peer-not-enabled                  "cudaErrorPeerNotEnabled"))
  ((:cuda-error-set-on-active-process             "cudaErrorSetOnActiveProcess"))
  ((:cuda-error-context-is-destroyed              "cudaErrorContextIsDestroyed"))
  ((:cuda-error-assert                            "cudaErrorAssert"))
  ((:cuda-error-too-many-peers                    "cudaErrorTooManyPeers"))
  ((:cuda-error-host-memory-already-registered    "cudaErrorHostMemoryAlreadyRegistered"))
  ((:cuda-error-host-memory-not-registered        "cudaErrorHostMemoryNotRegistered"))
  ((:cuda-error-hardware-stack-error              "cudaErrorHardwareStackError"))
  ((:cuda-error-illegal-instruction               "cudaErrorIllegalInstruction"))
  ((:cuda-error-misalighned-address               "cudaErrorMisalignedAddress"))
  ((:cuda-error-invalid-address-space             "cudaErrorInvalidAddressSpace"))
  ((:cuda-error-invalid-pc                        "cudaErrorInvalidPc"))
  ((:cuda-error-launch-failure                    "cudaErrorLaunchFailure"))
  ((:cuda-error-cooperative-launch-too-large      "cudaErrorCooperativeLaunchTooLarge"))
  ((:cuda-error-not-permitted                     "cudaErrorNotPermitted"))
  ((:cuda-error-not-supported                     "cudaErrorNotSupported"))
  ((:cuda-error-system-not-ready                  "cudaErrorSystemNotReady"))
  ((:cuda-error-system-driver-mismatch            "cudaErrorSystemDriverMismatch"))
  ((:cuda-error-compat-not-supported-on-device    "cudaErrorCompatNotSupportedOnDevice"))
  ((:cuda-error-stream-capture-unsupported        "cudaErrorStreamCaptureUnsupported"))
  ((:cuda-error-stream-capture-invalidated        "cudaErrorStreamCaptureInvalidated"))
  ((:cuda-error-stream-capture-merge              "cudaErrorStreamCaptureMerge"))
  ((:cuda-error-stream-capture-unmatched          "cudaErrorStreamCaptureUnmatched"))
  ((:cuda-error-stream-capture-unjoined           "cudaErrorStreamCaptureUnjoined"))
  ((:cuda-error-stream-capture-isolation          "cudaErrorStreamCaptureIsolation"))
  ((:cuda-error-stream-capture-implicit           "cudaErrorStreamCaptureImplicit"))
  ((:cuda-error-captured-event                    "cudaErrorCapturedEvent"))
  ((:cuda-error-stream-capture-wrong-thread       "cudaErrorStreamCaptureWrongThread"))
  ((:cuda-error-timeout                           "cudaErrorTimeout"))
  ((:cuda-error-graph-exec-update-failure         "cudaErrorGraphExecUpdateFailure"))
  ((:cuda-error-unknown                           "cudaErrorUnknown")))

(cenum cuda-memcpy-kind
  ((:cuda-memcpy-host-to-host     "cudaMemcpyHostToHost"))
  ((:cuda-memcpy-host-to-device   "cudaMemcpyHostToDevice"))
  ((:cuda-memcpy-device-to-host   "cudaMemcpyHostToDevice"))
  ((:cuda-memcpy-device-to-device "cudaMemcpyDeviceToDevice"))
  ((:cuda-memcpy-default          "cudaMemcpyDefault")))

(ctype cuda-stream "cudaStream_t")


;;; cuBLAS
(cstruct cu-complex "cuComplex")
(cstruct cu-double-complex "cuDoubleComplex")


(constant (+version+ "CUBLAS_VERSION"))

(ctype handle "cublasHandle_t")

(cenum status
  ((:cublas-status-success          "CUBLAS_STATUS_SUCCESS"))
  ((:cublas-status-not-initialized  "CUBLAS_STATUS_NOT_INITIALIZED"))
  ((:cublas-status-alloc-failed     "CUBLAS_STATUS_ALLOC_FAILED"))
  ((:cublas-status-invalid-value    "CUBLAS_STATUS_INVALID_VALUE"))
  ((:cublas-status-arch-mismatch    "CUBLAS_STATUS_ARCH_MISMATCH"))
  ((:cublas-status-mapping-error    "CUBLAS_STATUS_MAPPING_ERROR"))
  ((:cublas-status-execution-failed "CUBLAS_STATUS_EXECUTION_FAILED"))
  ((:cublas-status-internal-error   "CUBLAS_STATUS_INTERNAL_ERROR"))
  ((:cublas-status-not-supported    "CUBLAS_STATUS_NOT_SUPPORTED"))
  ((:cublas-status-license-error    "CUBLAS_STATUS_LICENSE_ERROR")))

(cenum operation
  ((:cublas-op-n "CUBLAS_OP_N"))
  ((:cublas-op-t "CUBLAS_OP_T"))
  ((:cublas-op-c "CUBLAS_OP_C")))

(cenum fill-mode
  ((:cublas-fill-mode-lower "CUBLAS_FILL_MODE_LOWER"))
  ((:cublas-fill-mode-upper "CUBLAS_FILL_MODE_UPPER"))
  ((:cublas-fill-mode-full  "CUBLAS_FILL_MODE_FULL")))

(cenum diag-type
  ((:cublas-diag-non-unit "CUBLAS_DIAG_NON_UNIT"))
  ((:cublas-diag-unit     "CUBLAS_DIAG_UNIT")))

(cenum side-mode
  ((:cublas-side-left  "CUBLAS_SIDE_LEFT"))
  ((:cublas-side-right "CUBLAS_SIDE_RIGHT")))

(cenum pointer-mode
  ((:cublas-pointer-mode-host   "CUBLAS_POINTER_MODE_HOST"))
  ((:cublas-pointer-mode-device "CUBLAS_POINTER_MODE_DEVICE")))

(cenum atomics-mode
  ((:cublas-atomics-not-allowed "CUBLAS_ATOMICS_NOT_ALLOWED"))
  ((:cublas-atomics-allowed     "CUBLAS_ATOMICS_ALLOWED")))

(cenum gemm-algo
  ((:cublas-gemm-default "CUBLAS_GEMM_DEFAULT"))
  ((:cublas-gemm-algo0   "CUBLAS_GEMM_ALGO0"))  ((:cublas-gemm-algo1   "CUBLAS_GEMM_ALGO1"))
  ((:cublas-gemm-algo2   "CUBLAS_GEMM_ALGO2"))  ((:cublas-gemm-algo3   "CUBLAS_GEMM_ALGO3"))
  ((:cublas-gemm-algo4   "CUBLAS_GEMM_ALGO4"))  ((:cublas-gemm-algo5   "CUBLAS_GEMM_ALGO5"))
  ((:cublas-gemm-algo6   "CUBLAS_GEMM_ALGO6"))  ((:cublas-gemm-algo7   "CUBLAS_GEMM_ALGO7"))
  ((:cublas-gemm-algo8   "CUBLAS_GEMM_ALGO8"))  ((:cublas-gemm-algo9   "CUBLAS_GEMM_ALGO9"))
  ((:cublas-gemm-algo10  "CUBLAS_GEMM_ALGO10")) ((:cublas-gemm-algo11   "CUBLAS_GEMM_ALGO11"))
  ((:cublas-gemm-algo12  "CUBLAS_GEMM_ALGO12")) ((:cublas-gemm-algo13   "CUBLAS_GEMM_ALGO13"))
  ((:cublas-gemm-algo14  "CUBLAS_GEMM_ALGO14")) ((:cublas-gemm-algo15   "CUBLAS_GEMM_ALGO15"))
  ((:cublas-gemm-algo16  "CUBLAS_GEMM_ALGO16")) ((:cublas-gemm-algo17   "CUBLAS_GEMM_ALGO17"))
  ((:cublas-gemm-algo18  "CUBLAS_GEMM_ALGO18")) ((:cublas-gemm-algo19   "CUBLAS_GEMM_ALGO19"))
  ((:cublas-gemm-algo20  "CUBLAS_GEMM_ALGO20")) ((:cublas-gemm-algo21   "CUBLAS_GEMM_ALGO21"))
  ((:cublas-gemm-algo22  "CUBLAS_GEMM_ALGO22")) ((:cublas-gemm-algo23   "CUBLAS_GEMM_ALGO23")))

(cenum math
   ((:cublas-default-math                               "CUBLAS_DEFAULT_MATH"))
   ((:cublas-pedantic_math                              "CUBLAS_PEDANTIC_MATH"))
   ((:cublas-tf32-tensor-op-math                        "CUBLAS_TF32_TENSOR_OP_MATH"))
   ((:cublas-math-disallowe-reduced-precision-reduction "CUBLAS_MATH_DISALLOW_REDUCED_PRECISION_REDUCTION")))

(cenum compute-type
  ((:cublas-compute-16f           "CUBLAS_COMPUTE_16F"))
  ((:cublas-compute-16f-pedantic  "CUBLAS_COMPUTE_16F_PEDANTIC"))
  ((:cublas-compute-32f           "CUBLAS_COMPUTE_32F"))
  ((:cublas-compute-32f-pedantic  "CUBLAS_COMPUTE_32F_PEDANTIC"))
  ((:cublas-compute-32f-fast-16f  "CUBLAS_COMPUTE_32F_FAST_16F"))
  ((:cublas-compute-32f-fast-16bf "CUBLAS_COMPUTE_32F_FAST_16BF"))
  ((:cublas-compute-32f-fast-tf32 "CUBLAS_COMPUTE_32F_FAST_TF32"))
  ((:cublas-compute-64f           "CUBLAS_COMPUTE_64F"))
  ((:cublas-compute-64f-pedantic  "CUBLAS_COMPUTE_64F_PEDANTIC"))
  ((:cublas-compute-32i           "CUBLAS_COMPUTE_32I"))
  ((:cublas-compute-32i-pedantic  "CUBLAS_COMPUTE_32I_PEDANTIC")))

(ctype log-callback "cublasLogCallback")

(cenum cuda-data-type
  ((:cuda-r-16f  "CUDA_R_16F"))
  ((:cuda-c-16f  "CUDA_C_16F"))
  ((:cuda-r-16bf "CUDA_R_16BF"))
  ((:cuda-c-16bf "CUDA_C_16BF"))
  ((:cuda-r-32f  "CUDA_R_32F"))
  ((:cuda-c-32f  "CUDA_C_32F"))
  ((:cuda-r-64f  "CUDA_R_64F"))
  ((:cuda-c-64f  "CUDA_C_64F"))
  ((:cuda-r-8i   "CUDA_R_8I"))
  ((:cuda-c-8i   "CUDA_C_8I"))
  ((:cuda-r-8u   "CUDA_R_8U"))
  ((:cuda-c-8u   "CUDA_C_8U"))
  ((:cuda-r-32i  "CUDA_R_32I"))
  ((:cuda-c-32i  "CUDA_C_32I")))

(cenum library-property-type
  ((:major-version "MAJOR_VERSION"))
  ((:minor-version "MINOR_VERSION"))
  ((:patch-level   "PATCH_LEVEL")))
